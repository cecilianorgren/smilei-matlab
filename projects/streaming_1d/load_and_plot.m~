%% Load object
filepath = '/Users/cecilia/Smilei/streaming_instabilities/beam1/Fields0.h5';
namelist = '/Users/cecilia/Smilei/streaming_instabilities/beam1/tst1d_02_two_str_instability.py';
particlebinningpath = '/Users/cecilia/Smilei/streaming_instabilities/beam1/';

sm = SMILEI(filepath,namelist,particlebinningpath);
%%
info = h5info(filepath);
nGroups = numel(info.Groups.Groups);
datasets = {info.Groups.Groups(1).Datasets.Name};
nDatasets = numel(datasets);
for iGroup = 1:nGroups
  group = info.Groups.Groups(iGroup).Name;
  for iDataset = 1:nDatasets
    dataset = h5read(filepath,[group filesep datasets{iDataset}]);
    eval([datasets{iDataset} '(iGroup,:) = torow(dataset);' ])
  end
end

%% Diagonal particle binning
listFiles = dir([particlebinningpath 'ParticleBinning*.h5']);
nFiles = numel(listFiles);    
iFile = 1;
tmp_path = [listFiles(iFile).folder filesep listFiles(iFile).name];

%% Temporal evolution of partice distributions
dirpath = '/Users/cecilia/Discs/betzy/Smilei/cold_dipolarization_CN/cold_momentum/';
filename = sprintf('ParticleBinning%g.h5',0);
info_diag = h5info([dirpath filesep filename]);
datasets = {info_diag.Datasets.Name};
nDatasets = numel(datasets);

doLog = 1;
%%
h = setup_subplots(1,1);

for it = 1:nData
  group = info.Groups.Groups(iGroup).Name; 
  for id = 1:nid
    hca = h(isub); isub = isub + 1; 
    
    %info = h5info([dirpath filename]);
    data = h5read([dirpath filename],timestep);
    name = h5readatt([dirpath filename],'/','name');
    dep0 = h5readatt([dirpath filename],'/','axis0');
    dep1 = h5readatt([dirpath filename],'/','axis1');
    dep2 = h5readatt([dirpath filename],'/','axis2');
    [dep0_str,dep0_val] = make_dep(dep0);
    [dep1_str,dep1_val] = make_dep(dep1);
    [dep2_str,dep2_val] = make_dep(dep2);

    if doLog
      imagesc(hca,dep0_val,dep2_val,log10(squeeze(data)))
      hcb = colorbar('peer',hca);
      hcb.YLabel.String = ['log10 ' name];
    else
      imagesc(hca,dep0_val,dep2_val,squeeze(data))
      hcb = colorbar('peer',hca);
      hcb.YLabel.String = name;
    end
    hca.XLabel.String = dep0_str;
    hca.YLabel.String = dep2_str;
    hca.Title.String = timestep(2:end);
    hcb.YLabel.Interpreter = 'none';
    hca.YDir = 'normal';
    colormap(hca,pic_colors('candy4'))
    drawnow
  end  
  cn.print(['vx_vy_vz_' timestep(2:end)])
end